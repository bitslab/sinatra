(window.webpackJsonp = window.webpackJsonp || []).push([[194], {
    VeNJ: function (e, t, i) {
        "use strict";
        i.r(t), i.d(t, "EmptyState", (function () {
            return me
        })), i.d(t, "TimelineRenderer", (function () {
            return ue
        }));
        i("kYxP");
        var n = i("ERkP"), s = i.n(n), r = i("6/RC"), o = i("aWzz"), a = i("fs1G"), l = i("zTrU"), c = i("iChn"),
            h = i("Qyxo"), d = i("aITJ"), p = i("5UID"), m = i("iBK2"), u = i("ejT/"), _ = i("IG4P"), v = i("xjVt"),
            g = i("j5fn"), b = i("rxtR"), y = i("8UdT"), w = i("MDbM"), C = i("pbku"), f = i("Irs7"), E = i("WA1W"),
            T = i("VY6S");
        const I = {threshold: [.01, .5]};
        var k = class {
            constructor(e) {
                this._itemsUnderObservation = {}, this._lingerCandidates = new Map, this._reactivityCandidates = new Map, this._lingerEvents = new Map, this._impressionEvents = new Map, this.dequeueLingerEvents = () => {
                    const e = Array.from(this._lingerEvents, (([e, {end: t, start: i}]) => ({
                        id: e,
                        start: i,
                        end: t
                    })));
                    return this._lingerEvents.clear(), e
                }, this._getLingerEventForId = e => {
                    const t = this._lingerEvents.get(e);
                    if (t) return {id: e, start: t.start, end: t.end}
                }, this._getOngoingLingerEvents = e => {
                    const t = [];
                    return this._lingerCandidates.forEach(((i, n) => {
                        e - i >= 500 && t.push({id: n, start: i, end: e})
                    })), t
                }, this._processIntersectionEntries = e => {
                    const t = Date.now();
                    e.forEach((e => {
                        const i = Object.entries(this._itemsUnderObservation).find((([t, i]) => i === e.target));
                        if (i) {
                            const r = i[0], {boundingClientRect: o, intersectionRatio: a, rootBounds: l} = e;
                            if (a >= .01) {
                                const e = null != o && null != l;
                                this._createImpressionCandidate(r, e ? (n = o.height, s = l.height, Math.floor(n / s * 1e5)) : void 0)
                            }
                            a >= .5 ? (this._createLingerCandidate(r, t), this._createReactivityCandidate(r, t)) : (this._transitionCandidateToLingerEvent(r, t), this._removeReactivityCandidate(r))
                        }
                        var n, s
                    })), this._onEventsTriggeredCallback && this._handleOnEventsTriggered()
                }, this._handleOnEventsTriggered = Object(T.a)((() => {
                    const e = this.dequeueImpressionEvents(), t = this.dequeueLingerEvents();
                    (e.length || t.length) && this._onEventsTriggeredCallback && this._onEventsTriggeredCallback({
                        impressionEvents: e,
                        lingerEvents: t
                    })
                }), 100), this._createImpressionCandidate = (e, t) => {
                    this._impressionEvents.set(e, {relativeElementHeight: t})
                }, this._createLingerCandidate = (e, t) => {
                    this._lingerCandidates.has(e) || this._lingerCandidates.set(e, t)
                }, this._transitionCandidateToLingerEvent = (e, t) => {
                    const i = this._lingerCandidates.get(e);
                    void 0 === i || this._lingerEvents.has(e) || t - i >= 500 && this._lingerEvents.set(e, {
                        start: i,
                        end: t
                    }), this._lingerCandidates.delete(e)
                }, this._createReactivityCandidate = (e, t) => {
                    if (!this._reactivityCandidates.has(e)) {
                        const t = window.setTimeout((() => {
                            this._reactivityCallback(e), this._reactivityCandidates.delete(e)
                        }), 500);
                        this._reactivityCandidates.set(e, t)
                    }
                }, this._removeReactivityCandidate = e => {
                    window.clearTimeout(this._reactivityCandidates.get(e)), this._reactivityCandidates.delete(e)
                }, null != e && e.root && e.root === window.document && (e.root = null);
                const t = {...I, ...e};
                this._onEventsTriggeredCallback = null == e ? void 0 : e.onEventsTriggeredCallback, this._observer = new window.IntersectionObserver(this._processIntersectionEntries, t), this._reactivityCallback = e && e.reactivityCallback || a.a
            }

            observe(e, t) {
                e && (this._itemsUnderObservation[t] = e, this._observer.observe(e))
            }

            unobserve(e, t) {
                e && (this._observer.unobserve(e), delete this._itemsUnderObservation[t], this._removeReactivityCandidate(t))
            }

            disconnect() {
                this._observer.disconnect()
            }

            dequeueImpressionEvents() {
                const e = Array.from(this._impressionEvents, (([e, {relativeElementHeight: t}]) => ({
                    id: e,
                    relativeElementHeight: t
                })));
                return this._impressionEvents.clear(), e
            }

            flushLingerEvents(e = Date.now()) {
                const t = this.dequeueLingerEvents(), i = this._getOngoingLingerEvents(e);
                return this._lingerCandidates.clear(), t.concat(i)
            }
        }, S = i("LFzM");
        var R = ({
                     children: e,
                     impressionTracker: t
                 }) => t ? s.a.createElement(S.a.Provider, {value: {impressionTracker: t}}, e) : e, A = i("EUHl"),
            L = i("tI3i"), x = i.n(L), O = r.canUseDOM ? window.location.href : "", N = function () {
                function e() {
                    var e = this;
                    this._eventCallbacks = {}, this.addEventListener = function (t, i) {
                        e._eventCallbacks[t] ? e._eventCallbacks[t].push(i) : e._eventCallbacks[t] = [i]
                    }, this.removeEventListener = function (t, i) {
                        var n = e._eventCallbacks[t].filter((function (e) {
                            return e.toString() !== i.toString()
                        }));
                        e._eventCallbacks[t] = n
                    }
                }

                var t = e.prototype;
                return t._dispatchEvent = function (e) {
                    for (var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) i[n - 1] = arguments[n];
                    var s = this._eventCallbacks[e];
                    null != s && Array.isArray(s) && s.map((function (e) {
                        e.apply(void 0, i)
                    }))
                }, t.canOpenURL = function () {
                    return Promise.resolve(!0)
                }, t.getInitialURL = function () {
                    return Promise.resolve(O)
                }, t.openURL = function (e) {
                    try {
                        return M(e), this._dispatchEvent("onOpen", e), Promise.resolve()
                    } catch (e) {
                        return Promise.reject(e)
                    }
                }, t._validateURL = function (e) {
                    x()("string" == typeof e, "Invalid URL: should be a string. Was: " + e), x()(e, "Invalid URL: cannot be empty")
                }, e
            }(), M = function (e) {
                if (r.canUseDOM) {
                    var t = new URL(e, window.location).toString();
                    window.open(t, "_blank", "noopener")
                }
            }, D = new N, F = i("MWbm"), P = i("TIdA"), U = i("A91F"), B = i("feu+"), H = i("lUZE"), j = i("rcen"),
            V = i("caTy"), W = i("KNCp");
        var q = Object.freeze({Icon: "Icon", IconSmall: "IconSmall", FullWidth: "FullWidth"}), z = i("TnY3"),
            K = i("rxPX"), G = i("1YZw"), J = Object(K.a)().propsFromActions((() => ({addToast: G.b}))).withAnalytics();

        class Y extends s.a.PureComponent {
            constructor(...e) {
                super(...e), this._getGraphicProps = Object(l.a)(((e, t) => {
                    const i = e ? ({style: t}) => s.a.createElement(F.a, {style: t}, s.a.createElement(P.a, {
                        accessibilityLabel: "",
                        aspectMode: U.a.exact(e.width / e.height),
                        image: e
                    })) : H.a;
                    let n = "illustration";
                    return e && t !== q.IconSmall ? t === q.FullWidth && (n = "illustrationFullWidth") : n = "icon", {
                        graphic: i,
                        graphicDisplayMode: n
                    }
                })), this._scribeAction = (e, t) => {
                    const {analytics: i} = this.props, {action: n, component: s, element: r} = t || {};
                    i.scribe({action: n || e, component: s || "cover", element: r})
                }, this._handleDismiss = () => {
                    const {dismissInfo: e, processCallback: t} = this.props, {callbacks: i} = e || {};
                    i && i.forEach((e => {
                        t(e)
                    })), e && (this._scribeAction("dismiss"), this.props.onClose())
                }, this._handlePrimaryCtaClick = () => {
                    this._handleCtaClick(this.props.primaryCta, "primary_cta")
                }, this._handleSecondaryCtaClick = () => {
                    this.props.secondaryCta && this._handleCtaClick(this.props.secondaryCta, "secondary_cta")
                }, this._handleCtaClick = ({callbacks: e, clientEventInfo: t, ctaBehavior: i}, n) => {
                    const {addToast: s, history: r, processCallback: o} = this.props;
                    if (this.props.onClose(), this._scribeAction("click", {element: n, ...t}), i.dismiss) {
                        const {dismiss: e} = i;
                        e && e.feedbackMessage && s({text: e.feedbackMessage.text})
                    }
                    if (i.navigate) {
                        const {navigate: e} = i, t = e && Object(V.b)(e.url);
                        t && (t.external ? D.openURL(t.pathname) : r.push(t.pathname))
                    }
                    e && e.forEach((e => o(e)))
                }
            }

            componentDidMount() {
                this.props.onImpression && this.props.onImpression()
            }

            render() {
                const {
                        details: e,
                        dismissInfo: t,
                        displayType: i,
                        image: n,
                        imageDisplayType: r,
                        primaryCta: o,
                        primaryText: l,
                        secondaryCta: c,
                        secondaryText: h,
                        type: d
                    } = this.props, p = s.a.createElement(j.a, {entities: l.entities, text: l.text}),
                    m = h ? s.a.createElement(j.a, {entities: h.entities, text: h.text}) : null, {
                        graphic: u,
                        graphicDisplayMode: _
                    } = this._getGraphicProps(n, r);
                if (d === W.a.Full) {
                    const n = e ? s.a.createElement(j.a, {entities: e.entities, text: e.text}) : null;
                    return s.a.createElement(B.a, {
                        actionLabel: o.text,
                        footer: n,
                        graphic: u,
                        graphicDisplayMode: _,
                        headline: p,
                        isFullHeightOnMobile: !t && "CenterCover" !== i,
                        onAction: this._handlePrimaryCtaClick,
                        onClose: this._handleDismiss,
                        onTertiaryAction: this._handleSecondaryCtaClick,
                        subtext: m,
                        tertiaryActionLabel: c && c.text,
                        withCloseButton: !!t
                    })
                }
                return s.a.createElement(B.a, {
                    actionLabel: o.text,
                    graphic: u,
                    graphicDisplayMode: "illustrationFullWidth" === _ ? _ : "none",
                    headline: p,
                    onAction: this._handlePrimaryCtaClick,
                    onClose: a.a,
                    onSecondaryAction: this._handleSecondaryCtaClick,
                    secondaryActionLabel: c && c.text,
                    subtext: m,
                    withCloseButton: !1
                })
            }
        }

        Y.defaultProps = {imageDisplayType: q.Icon};
        var X = Object(z.a)(J(Y));
        const Z = {component: "cover", action: "impression"};
        var Q = ({activeCover: e, clearActiveCover: t, processCallback: i}) => {
            const n = (e => {
                let t = {...Z};
                return e && (e.component && (t = {...t, component: e.component}), e.element && (t = {
                    ...t,
                    element: e.element
                }), e.action && (t = {...t, action: e.action})), t
            })(e.clientEventInfo), r = Object(f.b)(), o = () => {
                const {cover: {impressionCallbacks: t}} = e;
                t && t.forEach((e => i(e))), r.scribe({...n})
            };
            return "full" === e.type ? (a = e.cover, s.a.createElement(X, {
                details: a.details || void 0,
                dismissInfo: a.dismissInfo,
                displayType: a.displayType,
                image: a.image,
                imageDisplayType: a.imageDisplayType || void 0,
                onClose: t,
                onImpression: o,
                primaryCta: a.primaryCoverCta,
                primaryText: a.primaryText,
                processCallback: i,
                secondaryCta: a.secondaryCoverCta,
                secondaryText: a.secondaryText,
                type: "full"
            })) : "half" === e.type ? function (e) {
                const n = "CenterCover" === e.displayType ? "full" : "half";
                return s.a.createElement(X, {
                    displayType: e.displayType,
                    image: e.coverImage ? e.coverImage.image : void 0,
                    imageDisplayType: e.coverImage ? e.coverImage.imageDisplayType : void 0,
                    onClose: t,
                    onImpression: o,
                    primaryCta: e.primaryCoverCta,
                    primaryText: e.primaryText,
                    processCallback: i,
                    secondaryCta: e.secondaryCoverCta,
                    secondaryText: e.secondaryText,
                    type: n
                })
            }(e.cover) : null;
            var a
        }, $ = i("rHpw"), ee = i("VPAj"), te = i("0zXz"), ie = i("3GUV"), ne = i("v//M");
        const se = Object(ee.a)(s.a.createElement(ie.a, null)), re = ({
                                                                          bottomFetchStatus: e,
                                                                          onBottomRetry: t,
                                                                          withEndOfContent: i
                                                                      }) => s.a.createElement(F.a, {style: i && oe.footer}, s.a.createElement(ne.a, {
            fetchStatus: e,
            onRequestRetry: t,
            render: i ? se : te.a
        })), oe = $.a.create((e => ({footer: {height: 5 * e.lineHeightsPx.body}})));
        var ae = s.a.memo(re);
        const le = e => e.entryId, ce = e => e.sortIndex;
        const he = new Map, de = new Map, pe = e => {
            switch (e) {
                case y.c.Tweet:
                    return d.b.isDesktopOS() ? 250 : 400;
                case y.a.ModuleImpressionPlaceholder:
                    return 0;
                default:
                    return 100
            }
        };

        function me({analytics: e, renderEmptyState: t, richScribeAction: i}) {
            return s.a.useEffect((() => {
                i({...e.contextualScribeNamespace, action: "empty"}, e.contextualScribeData)
            }), [i, e]), t()
        }

        class ue extends s.a.PureComponent {
            constructor(e, t) {
                var i;
                super(e, t), this._promotedTweetDistanceMap = new Map, this._renderFooter = () => {
                    const {bottomFetchStatus: e, footer: t = null, onBottomRetry: i, showLoadingFooter: n} = this.props;
                    return n ? s.a.createElement(s.a.Fragment, null, s.a.createElement(ae, {
                        bottomFetchStatus: e,
                        onBottomRetry: i,
                        withEndOfContent: !t
                    }), t) : t
                }, this._refreshControlWrapper = e => {
                    const {canRefresh: t, onRefresh: i, refreshControl: n, topFetchStatus: r} = this.props;
                    return n ? s.a.createElement(n, {
                        canRefresh: t,
                        isRefreshing: r === w.a.LOADING,
                        onRefresh: i
                    }, e) : e
                }, this._getCellRenderer = Object(l.a)(((e, t) => {
                    let i;
                    const n = {module: t, renderEntry: e => i(e)};
                    return i = (t, i) => {
                        const s = e.getHandler(t), r = e.getDisplayType(t) || void 0;
                        return s && s.render ? s.render(t, n, i, r) : null
                    }, i
                })), this._getInitialFocusedEntry = Object(l.a)(((e, t) => t && e.find(t))), this._createEntryIndex = Object(l.a)((e => Object(c.a)(e, (e => e.entryId)))), this._handleBeforeWindowUnload = () => {
                    this._flushLingerScribes()
                }, this._handleKeyboardRefresh = () => {
                    this.refreshOrGoTop(!0)
                }, this.scrollToTop = e => {
                    if (this._scroller) {
                        const {applyNewTweetsBarInstructions: t} = this.props;
                        t && t(), this._scroller.scrollToNewest(e)
                    }
                }, this._handleAtBottom = this._proximityHandler((() => {
                    this.props.onAtBottom && this.props.onAtBottom()
                })), this._handleNearBottom = this._proximityHandler((() => {
                    this.props.onNearBottom()
                })), this._handleNearTop = this._proximityHandler((() => {
                    const {onNearTop: e} = this.props;
                    e()
                })), this._handleAtTop = this._proximityHandler((() => {
                    const {analytics: e, onAtTop: t, removeAlert: i, richScribeAction: n} = this.props;
                    i && i(), t && t();
                    n({...e.contextualScribeNamespace, component: "stream", element: "top", action: "show"})
                })), this._handleItemsRendered = this._proximityHandler((({positions: e, viewport: t}) => {
                    if (this.props.onEntriesRendered && this.props.onEntriesRendered(), !this._impressionTrackerRefactorEnabled) {
                        var i, n;
                        const e = (null == (i = this._impressionTrackerV2) ? void 0 : i.dequeueLingerEvents()) || [],
                            t = (null == (n = this._impressionTrackerV2) ? void 0 : n.dequeueImpressionEvents()) || [];
                        (e.length || t.length) && this._scribeStreamEvents({impressionEvents: t, lingerEvents: e})
                    }
                })), this._scribeImpressionEvents = e => {
                    var t;
                    const i = this._getEntryIndex(),
                        n = null == (t = this.context.featureSwitches) ? void 0 : t.isTrue("responsive_web_element_size_impression_scribe_enabled"),
                        s = Object(h.a)(e, (e => {
                            const t = i[e.id];
                            return null != t ? {
                                entry: t,
                                relativeElementHeight: n ? e.relativeElementHeight : void 0
                            } : null
                        }));
                    this._scribeNewEntries(s)
                }, this._handleOnEventsTriggeredCallback = ({impressionEvents: e, lingerEvents: t}) => {
                    this._scribeStreamEvents({impressionEvents: e, lingerEvents: t})
                }, this._scribeStreamEvents = ({impressionEvents: e, lingerEvents: t}) => {
                    (window.requestIdleCallback ? window.requestIdleCallback : window.requestAnimationFrame)((() => {
                        this._scribeLingerEvents(t), this._scribeImpressionEvents(e)
                    }))
                }, this._handleOnLingerEvent = e => {
                    const {applyReactionInstructions: t} = this.props, i = this._getEntryIndex()[e];
                    i && t({entry: i, triggerName: C.a.ON_LINGER})
                }, this._handlePositionRestored = () => {
                    this._positionedRestored = !0
                }, this._scheduleNewEntriesScribing = (i = e => {
                    const {analytics: t, richScribeAction: i} = this.props, n = this._buildStreamScribeData(e);
                    n.length > 0 && i({
                        ...t.contextualScribeNamespace,
                        component: "stream",
                        action: "results"
                    }, {items: n})
                }, r.canUseDOM && window.requestIdleCallback ? e => {
                    const t = window.requestIdleCallback((() => i(e)));
                    return () => window.cancelIdleCallback(t)
                } : r.canUseDOM && window.requestAnimationFrame ? e => {
                    const t = window.requestAnimationFrame((() => i(e)));
                    return () => window.cancelAnimationFrame(t)
                } : () => a.a), this._scribeLingerEvents = e => {
                    const {lingerCache: t, timelineId: i} = this.props;
                    if (0 === e.length) return;
                    if (!t.has(i)) {
                        const e = new Set;
                        t.set(i, e)
                    }
                    const n = t.get(i);
                    if (!n) return [];
                    const {handlerRegistry: s} = this.props,
                        r = {component: "stream", element: "linger", action: "results"}, o = this._getEntryIndex(),
                        a = [], l = [];
                    if (e.forEach((({end: e, id: t, start: i}) => {
                        const r = o[t];
                        if (!r) return;
                        if (n.has(t) || s.getNeedsLoad(r)) return;
                        n.add(t);
                        const c = this._getScribeDataItem(s, r);
                        let h;
                        if (r.type === y.c.Tweet) {
                            h = r.content.id
                        } else if (r.type === y.c.PagedCarouselItem) {
                            const e = r;
                            h = e.content.content && e.content.content.pagedCarouselFeedbackItem && e.content.content.pagedCarouselFeedbackItem.content.tweet.id
                        }
                        if (c) {
                            var d;
                            const t = {...c, impression_details: {visibility_start: i, visibility_end: e}};
                            var p, m;
                            if (h && null != (d = this.context.featureSwitches) && d.isTrue("responsive_web_home_timeline_impressions_first_linger_enabled")) t.first_impression = !(null != (p = this.props.lingerIds) && p.has(h) || null != (m = this.props.lingerIdsLatest) && m.has(h));
                            a.push(t)
                        }
                        h && l.push(h)
                    })), a.length > 0) {
                        const {analytics: e, richScribeAction: t} = this.props;
                        t({...e.contextualScribeNamespace, ...r}, {items: a})
                    }
                    l.length > 0 && this._storeLingerIds(l)
                }, this._setScroller = e => {
                    this._scroller = e
                }, this._newImpressionTrackerV2 = () => r.canUseDOM && window.IntersectionObserver ? new k({
                    onEventsTriggeredCallback: this._impressionTrackerRefactorEnabled ? this._handleOnEventsTriggeredCallback : void 0,
                    root: this.context.viewport.getViewport(),
                    rootMargin: this.context.viewport.getRootMargin(),
                    reactivityCallback: this._handleOnLingerEvent
                }) : void 0, this._impressionTrackerRefactorEnabled = t.featureSwitches.isTrue("responsive_web_impression_tracker_refactor_enabled"), this._streamScribeCancelCallbacks = [], this._impressionTrackerV2 = this._newImpressionTrackerV2()
            }

            UNSAFE_componentWillReceiveProps(e) {
                this.props.timelineId !== e.timelineId && (this._flushLingerScribes(), this._impressionTrackerV2 && this._impressionTrackerV2.disconnect(), this._impressionTrackerV2 = this._newImpressionTrackerV2())
            }

            componentDidMount() {
                const {onRef: e} = this.props;
                this._initialize(), window.addEventListener("beforelogout", this._handleBeforeWindowUnload), window.addEventListener("beforeunload", this._handleBeforeWindowUnload), e && e(this)
            }

            componentWillUnmount() {
                var e;
                const {onRef: t} = this.props;
                this._flushLingerScribes(), this._cancelStreamScribeCallbacks(), window.removeEventListener("beforelogout", this._handleBeforeWindowUnload), window.removeEventListener("beforeunload", this._handleBeforeWindowUnload), t && t(void 0), null == (e = this._impressionTrackerV2) || e.disconnect()
            }

            componentDidUpdate(e) {
                const {entries: t, handlerRegistry: i, onRef: n, timelineId: s} = this.props;
                s !== e.timelineId ? this._initialize() : t === e.entries && i === e.handlerRegistry || this._initialize(), n && n !== e.onRef && n(this)
            }

            render() {
                var e;
                const {
                    anchoring: t,
                    entries: i,
                    handlerRegistry: n,
                    header: r,
                    isInitialFocusEntry: o,
                    module: a,
                    nearStartProximityRatio: l,
                    renderEmptyState: c,
                    timelineId: h,
                    title: d,
                    withKeyboardShortcuts: m,
                    withoutHeadroom: _
                } = this.props, v = this.props.scroller, g = this._getInitialFocusedEntry(i, o);
                return this._refreshControlWrapper(this._shouldRenderEmptyState(i) ? s.a.createElement(me, {
                    analytics: this.props.analytics,
                    key: `empty-${h}`,
                    renderEmptyState: c,
                    richScribeAction: this.props.richScribeAction
                }) : s.a.createElement(R, {impressionTracker: this._impressionTrackerV2}, s.a.createElement(p.a, {title: d}, this._renderActiveCover(), this._renderPill(), s.a.createElement(v, {
                    anchoring: t,
                    assumedItemHeight: pe,
                    cacheKey: h,
                    footer: this._renderFooter(),
                    hasNewContentAtBottom: null == (e = this.context.featureSwitches) ? void 0 : e.isTrue("responsive_web_do_not_launch_me_reverse_home_timeline_enabled"),
                    header: r,
                    identityFunction: le,
                    initialAnchor: g && u.b(le(g)),
                    items: i,
                    nearStartProximityRatio: l,
                    onAtEnd: this._handleAtBottom,
                    onAtStart: this._handleAtTop,
                    onItemsRendered: this._handleItemsRendered,
                    onKeyboardRefresh: this._handleKeyboardRefresh,
                    onNearEnd: this._handleNearBottom,
                    onNearStart: this._handleNearTop,
                    onPositionRestored: this._handlePositionRestored,
                    ref: this._setScroller,
                    renderer: this._getCellRenderer(n, a),
                    sortIndexFunction: ce,
                    withKeyboardShortcuts: m,
                    withoutHeadroom: _
                }))))
            }

            _renderPill() {
                const {
                    alert: e,
                    applyNewTweetsBarInstructions: t,
                    module: i,
                    newTweetsPillLabel: n,
                    newTweetsPillMode: r,
                    removeAlert: o,
                    timelineId: a,
                    topUnseenCount: l
                } = this.props;
                var c, h, d, p;
                return r === A.a.URT ? null != (c = this.context.featureSwitches) && c.isTrue("responsive_web_home_new_tweets_pill_v2") ? s.a.createElement(g.a.Configure, {
                    alert: e,
                    applyNewTweetsBarInstructions: t,
                    isAtNewest: null == (h = this._scroller) ? void 0 : h.isAtNewest,
                    label: n,
                    module: i,
                    removeAlert: o,
                    timelineId: a
                }) : s.a.createElement(v.a.Configure, {
                    alert: e,
                    applyNewTweetsBarInstructions: t,
                    isAtNewest: null == (d = this._scroller) ? void 0 : d.isAtNewest,
                    label: n,
                    removeAlert: o,
                    timelineId: a
                }) : r === A.a.CLIENT && l && l > 0 ? null != (p = this.context.featureSwitches) && p.isTrue("responsive_web_home_new_tweets_pill_v2") ? s.a.createElement(g.a.Configure, {
                    module: i,
                    removeAlert: o,
                    timelineId: a,
                    unreadCount: l
                }) : s.a.createElement(v.a.Configure, {
                    applyNewTweetsBarInstructions: t,
                    removeAlert: o,
                    timelineId: a,
                    unreadCount: l
                }) : null
            }

            _renderActiveCover() {
                const {activeCover: e, clearActiveCover: t, processCallback: i} = this.props, n = e && e.cover,
                    r = this.context.featureSwitches.isTrue("responsive_web_timeline_cover_killswitch_enabled");
                return e && n && !r ? s.a.createElement(Q, {
                    activeCover: e,
                    clearActiveCover: t,
                    processCallback: i
                }) : null
            }

            _shouldRenderEmptyState(e) {
                const {activeCover: t, hasPendingHandlers: i, initialFetchStatus: n} = this.props, s = n === w.a.LOADED,
                    r = 0 === e.length;
                return s && r && !t && !i
            }

            _getEntryIndex() {
                return this._createEntryIndex(this.props.entries)
            }

            _initialize() {
                this._createPromotedTweetDistanceMap()
            }

            _createPromotedTweetDistanceMap() {
                const {entries: e} = this.props;
                this._promotedTweetDistanceMap = new Map;
                let t = null;
                e.forEach((e => {
                    var i, n, s;
                    const r = (null == (i = e.content) ? void 0 : i.promotedMetadata) && e.type === y.c.Tweet;
                    r && null !== t && this._promotedTweetDistanceMap.set(e.entryId, t), r ? t = 0 : null !== t && (e.shouldCountTowardsAdSpacing || null != (n = e.content) && null != (s = n.dismissedEntry) && s.shouldCountTowardsAdSpacing) && (t += 1)
                }))
            }

            _flushLingerScribes() {
                var e;
                const t = (null == (e = this._impressionTrackerV2) ? void 0 : e.flushLingerEvents()) || [];
                this._scribeLingerEvents(t)
            }

            refreshOrGoTop(e) {
                this._scroller && !this._scroller.isAtNewest() ? this.scrollToTop(e) : this.props.onRefresh()
            }

            scrollAndFocusNewest() {
                this._scroller && this._scroller.scrollToNewest(!0)
            }

            _proximityHandler(e) {
                return t => {
                    this._positionedRestored && e(t)
                }
            }

            _scribeNewEntries(e) {
                const t = this._scheduleNewEntriesScribing(e);
                for (this._streamScribeCancelCallbacks.push(t); this._streamScribeCancelCallbacks.length >= 20;) this._streamScribeCancelCallbacks.shift()
            }

            _buildStreamScribeData(e) {
                const {handlerRegistry: t, impressionCache: i, timelineId: n} = this.props;
                if (!i.has(n)) {
                    const e = new Set;
                    i.set(n, e)
                }
                const s = i.get(n);
                return s ? e.reduce(((e, i, n) => {
                    const {entry: r, relativeElementHeight: o} = i, {entryId: a} = r;
                    if (!s.has(a) && !t.getNeedsLoad(r)) {
                        s.add(a);
                        const i = this._getScribeDataItem(t, r);
                        if (i) {
                            var l;
                            const t = !(null == (l = r.content) || !l.promotedMetadata),
                                n = this._promotedTweetDistanceMap.get(a);
                            t && n && (i.tweet_count = n), null != o && (i.percent_screen_height_100k = o), e.push(i)
                        }
                    }
                    return e
                }), []) : []
            }

            _storeLingerIds(e) {
                const {lingerIds: t, lingerIdsLatest: i, timelineId: n} = this.props;
                n !== E.d && n !== E.b || !t ? n !== E.c && n !== E.a || !i || i.addNewTweets(e) : t.addNewTweets(e)
            }

            _getScribeDataItem(e, t) {
                const i = e.getHandler(t);
                if (i) return i.getScribeDataItem(t)
            }

            _cancelStreamScribeCallbacks() {
                this._streamScribeCancelCallbacks.forEach((e => e()))
            }
        }

        ue.contextTypes = {viewport: o.object, featureSwitches: o.any}, ue.defaultProps = {
            impressionCache: he,
            lingerCache: de,
            onBottomRetry: a.a,
            onNearBottom: a.a,
            onNearTop: a.a,
            onRefresh: a.a,
            refreshControl: _.a,
            scroller: m.b,
            lingerIds: b.a.get(),
            lingerIdsLatest: b.a.getLatest(),
            withoutHeadroom: !1,
            showLoadingFooter: !0,
            withKeyboardShortcuts: !0
        };
        t.default = Object(f.a)(ue)
    }, "ejT/": function (e, t, i) {
        "use strict";
        i.d(t, "b", (function () {
            return n
        })), i.d(t, "a", (function () {
            return s
        }));
        const n = e => ({id: e, distanceToViewportTop: 0}), s = e => ({id: e, distanceToViewportBottom: 0})
    }, pbku: function (e, t, i) {
        "use strict";
        i.d(t, "a", (function () {
            return n
        }));
        const n = Object.freeze({
            ON_BLOCK_AUTHOR: "onBlockAuthor",
            ON_LINGER: "onLinger",
            ON_IS_RELEVANT: "onIsRelevant",
            ON_SHOW_MORE: "onShowMore",
            ON_LIKE: "onLike",
            ON_FOLLOW: "onFollow"
        })
    }
}]);
//# sourceMappingURL=https://ton.local.twitter.com/responsive-web-internal/sourcemaps/client-web/loader.TimelineRenderer.0d1ba828.js.map